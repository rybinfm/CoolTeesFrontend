{"ast":null,"code":"import API from '../../API';\nimport { addCartAction, fetchCartItemsAction, increaseCartAction, decreaseCartAction } from './actions';\nconst api = new API();\nconst CARTS_KEY = 'CARTS_KEY';\nexport const fetchCarts = () => {\n  return async dispatch => {\n    return api.getCarts().then(carts => {\n      const subtotal = calculateSubtotal(carts);\n      dispatch(fetchCartItemsAction(carts, subtotal));\n    }).catch(error => {\n      alert('Failed to connect API: /carts/');\n    });\n  };\n};\nexport const addCart = item => {\n  return async (dispatch, getState) => {\n    return api.addCarts(item.id).then(addedCart => {\n      let prevCarts = getState().carts.list;\n      addedCart[\"item\"] = item;\n      prevCarts.push(addedCart);\n      const subtotal = calculateSubtotal(prevCarts);\n      dispatch(addCartAction(prevCarts, subtotal));\n    }).catch(error => {\n      alert('Failed to connect API to add cart');\n      console.log(error);\n    });\n  };\n};\nexport const increaseCart = cart_id => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter(cart => cart.id === cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity + 1;\n    return api.updateCarts(cart_id, nextSelectedCount).then(updatedCart => {\n      prevCarts = prevCarts.filter(cart => cart.id !== cart_id);\n      prevCarts.push(updatedCart);\n      const subtotal = calculateSubtotal(prevCarts);\n      dispatch(increaseCartAction(prevCarts, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API to increase cart's quantity\");\n      console.log(error);\n    });\n  };\n};\nexport const decreaseCart = cart_id => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter(cart => cart.id === cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity - 1;\n\n    if (nextSelectedCount > 0) {\n      return api.updateCarts(cart_id, nextSelectedCount).then(updatedCart => {\n        prevCarts = prevCarts.filter(cart => cart.id !== cart_id);\n        prevCarts.push(updatedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(decreaseCartAction(prevCarts, subtotal));\n      }).catch(error => {\n        alert(\"Failed to conect API to decrease cart's quantity\");\n        console.log(error);\n      });\n    }\n\n    ;\n  };\n};\n\nconst calculateSubtotal = carts => {\n  let subtotal = 0;\n\n  for (let key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].quantity;\n  }\n\n  return subtotal;\n};","map":{"version":3,"names":["API","addCartAction","fetchCartItemsAction","increaseCartAction","decreaseCartAction","api","CARTS_KEY","fetchCarts","dispatch","getCarts","then","carts","subtotal","calculateSubtotal","catch","error","alert","addCart","item","getState","addCarts","id","addedCart","prevCarts","list","push","console","log","increaseCart","cart_id","matchedCarts","filter","cart","nextSelectedCount","quantity","updateCarts","updatedCart","decreaseCart","key","Number","price"],"sources":["/Users/rybinmathalikunnel/Desktop/techis-wd-forum-django-react-main/frontend/src/reducks/carts/operations.js"],"sourcesContent":["import API from '../../API'\nimport {\n    addCartAction,\n    fetchCartItemsAction,\n    increaseCartAction,\n    decreaseCartAction,\n} from './actions';\n\n\nconst api = new API();\nconst CARTS_KEY = 'CARTS_KEY';\n\nexport const fetchCarts = () => {\n    return async (dispatch) => {\n        return api\n            .getCarts()\n            .then((carts)=>{\n                const subtotal = calculateSubtotal(carts);\n                dispatch(fetchCartItemsAction(carts, subtotal));\n            })\n            .catch((error) =>{\n                alert('Failed to connect API: /carts/')\n            });\n    };\n};\n\nexport const addCart = (item) => {\n    return async (dispatch, getState) => {\n        return api\n        .addCarts(item.id)\n        .then((addedCart) => {\n            let prevCarts = getState().carts.list;\n            addedCart[\"item\"] = item;\n            prevCarts.push(addedCart);\n            const subtotal = calculateSubtotal(prevCarts);\n            dispatch(addCartAction(prevCarts, subtotal))\n        })\n        .catch((error) =>{\n            alert('Failed to connect API to add cart');\n            console.log(error);\n        });\n    };\n};\n\nexport const increaseCart = (cart_id) => {\n    return async (dispatch, getState) => {\n        let prevCarts = getState().carts.list;\n        let matchedCarts = prevCarts.filter((cart)=>cart.id===cart_id);\n        let nextSelectedCount = matchedCarts[0].quantity + 1;\n        return api\n            .updateCarts(cart_id, nextSelectedCount)\n            .then((updatedCart)=>{\n                prevCarts = prevCarts.filter((cart)=>cart.id !== cart_id);\n                prevCarts.push(updatedCart);\n                const subtotal = calculateSubtotal(prevCarts);\n                dispatch(increaseCartAction(prevCarts,subtotal));\n            })\n            .catch((error)=>{\n                alert(\"Failed to connect API to increase cart's quantity\");\n                console.log(error);\n            })\n    }\n}\n\nexport const decreaseCart = (cart_id) =>{\n    return async (dispatch, getState) => {\n        let prevCarts = getState().carts.list;\n        let matchedCarts = prevCarts.filter((cart) => cart.id === cart_id);\n        let nextSelectedCount = matchedCarts[0].quantity -1;\n        if (nextSelectedCount > 0){\n            return api\n                .updateCarts(cart_id, nextSelectedCount)\n                .then((updatedCart)=>{\n                    prevCarts = prevCarts.filter((cart)=>cart.id !== cart_id);\n                    prevCarts.push(updatedCart);\n                    const subtotal = calculateSubtotal(prevCarts);\n                    dispatch(decreaseCartAction(prevCarts,subtotal));\n                })\n                .catch((error)=>{\n                    alert(\"Failed to conect API to decrease cart's quantity\")\n                    console.log(error);\n                })\n        };\n    };\n};\nconst calculateSubtotal = (carts) =>{\n    let subtotal = 0;\n    for (let key in carts) {\n        subtotal += Number(carts[key].item.price) * carts[key].quantity;\n    }\n    return subtotal;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}