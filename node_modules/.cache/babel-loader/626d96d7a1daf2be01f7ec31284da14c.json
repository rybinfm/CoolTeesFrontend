{"ast":null,"code":"import API from \"../../API\";\nimport { signInAction, signUpAction, signOutAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\nconst api = new API();\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\nexport const fetchUserFromLocalStorage = () => {\n  return async dispatch => {\n    const userJSON = localStorage.getItem(LOGIN_USER_KEY);\n\n    if (userJSON && userJSON.token !== \"\") {\n      dispatch(signInAction(JSON.parse(userJSON)));\n    }\n  };\n};\nexport const signUp = (user_name, email, password) => {\n  return async dispatch => {\n    //validate entry before sent to api\n    if (user_name === \"\" || email === \"\" || password === \"\") {\n      alert(\"Please fill out name, email, and password\");\n      return false;\n    }\n\n    return api.signUp(user_name, email, password).then(user => {\n      dispatch(signUpAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n      dispatch(push(\"/\"));\n    }).catch(error => {\n      alert(\"failed to connect to API so sign up\");\n      console.log(error);\n    });\n  };\n};\nexport const signIn = (email, password) => {\n  return async dispatch => {\n    if (email === \"\" || password === \"\") {\n      alert(\"Please fill out email and password\");\n      return false;\n    }\n\n    return api.signIn(email, password).then(user => {\n      dispatch(signInAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n      dispatch(push(\"/\"));\n    }).catch(error => {\n      alert(\"Failed to connect to API to sign in\");\n      console.log(error);\n    });\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    dispatch(signOutAction());\n    localStorage.removeItem(LOGIN_USER_KEY);\n    dispatch(push(\"/signin\"));\n  };\n};","map":{"version":3,"names":["API","signInAction","signUpAction","signOutAction","push","api","LOGIN_USER_KEY","fetchUserFromLocalStorage","dispatch","userJSON","localStorage","getItem","token","JSON","parse","signUp","user_name","email","password","alert","then","user","setItem","stringify","catch","error","console","log","signIn","signOut","removeItem"],"sources":["/Users/rybinmathalikunnel/Desktop/techis-wd-forum-django-react-main/frontend/src/reducks/users/operations.js"],"sourcesContent":["import API from \"../../API\";\nimport { signInAction, signUpAction, signOutAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\n\nconst api = new API();\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\n\nexport const fetchUserFromLocalStorage = () =>{\n    return async (dispatch) => {\n        const userJSON = localStorage.getItem(LOGIN_USER_KEY);\n        if (userJSON && userJSON.token !== \"\"){\n            dispatch(signInAction(JSON.parse(userJSON)))\n        }\n    }\n}\n\nexport const signUp = (user_name, email, password, ) => {\n    return async (dispatch) =>{\n        //validate entry before sent to api\n        if(user_name === \"\" || email === \"\" || password === \"\"){\n            alert(\"Please fill out name, email, and password\")\n            return false;\n        }\n    return api\n        .signUp(user_name, email, password)\n        .then((user)=>{\n            dispatch(signUpAction(user));\n            localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n            dispatch(push(\"/\"));\n        })\n        .catch((error)=>{\n            alert(\"failed to connect to API so sign up\")\n            console.log(error)\n        })\n    }\n}\n\nexport const signIn = (email, password) =>{\n    return async (dispatch) => {\n        if (email === \"\" || password === \"\"){\n            alert(\"Please fill out email and password\");\n            return false;\n        }\n\n        return api\n            .signIn(email, password)\n            .then((user)=>{\n                dispatch(signInAction(user));\n                localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user))\n                dispatch(push(\"/\"))\n            })\n            .catch((error) =>{\n                alert(\"Failed to connect to API to sign in\");\n                console.log(error);\n            })\n    }\n}\n\nexport const signOut = () => {\n    return async (dispatch) => {\n        dispatch(signOutAction());\n        localStorage.removeItem(LOGIN_USER_KEY);\n        dispatch(push(\"/signin\"))\n    }\n}"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,aAArC,QAA0D,WAA1D;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,MAAMC,GAAG,GAAG,IAAIL,GAAJ,EAAZ;AACA,MAAMM,cAAc,GAAG,gBAAvB;AAEA,OAAO,MAAMC,yBAAyB,GAAG,MAAK;EAC1C,OAAO,MAAOC,QAAP,IAAoB;IACvB,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqBL,cAArB,CAAjB;;IACA,IAAIG,QAAQ,IAAIA,QAAQ,CAACG,KAAT,KAAmB,EAAnC,EAAsC;MAClCJ,QAAQ,CAACP,YAAY,CAACY,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAD,CAAb,CAAR;IACH;EACJ,CALD;AAMH,CAPM;AASP,OAAO,MAAMM,MAAM,GAAG,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,QAAnB,KAAkC;EACpD,OAAO,MAAOV,QAAP,IAAmB;IACtB;IACA,IAAGQ,SAAS,KAAK,EAAd,IAAoBC,KAAK,KAAK,EAA9B,IAAoCC,QAAQ,KAAK,EAApD,EAAuD;MACnDC,KAAK,CAAC,2CAAD,CAAL;MACA,OAAO,KAAP;IACH;;IACL,OAAOd,GAAG,CACLU,MADE,CACKC,SADL,EACgBC,KADhB,EACuBC,QADvB,EAEFE,IAFE,CAEIC,IAAD,IAAQ;MACVb,QAAQ,CAACN,YAAY,CAACmB,IAAD,CAAb,CAAR;MACAX,YAAY,CAACY,OAAb,CAAqBhB,cAArB,EAAqCO,IAAI,CAACU,SAAL,CAAeF,IAAf,CAArC;MACAb,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR;IACH,CANE,EAOFoB,KAPE,CAOKC,KAAD,IAAS;MACZN,KAAK,CAAC,qCAAD,CAAL;MACAO,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH,CAVE,CAAP;EAWC,CAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMG,MAAM,GAAG,CAACX,KAAD,EAAQC,QAAR,KAAoB;EACtC,OAAO,MAAOV,QAAP,IAAoB;IACvB,IAAIS,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,EAAjC,EAAoC;MAChCC,KAAK,CAAC,oCAAD,CAAL;MACA,OAAO,KAAP;IACH;;IAED,OAAOd,GAAG,CACLuB,MADE,CACKX,KADL,EACYC,QADZ,EAEFE,IAFE,CAEIC,IAAD,IAAQ;MACVb,QAAQ,CAACP,YAAY,CAACoB,IAAD,CAAb,CAAR;MACAX,YAAY,CAACY,OAAb,CAAqBhB,cAArB,EAAqCO,IAAI,CAACU,SAAL,CAAeF,IAAf,CAArC;MACAb,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR;IACH,CANE,EAOFoB,KAPE,CAOKC,KAAD,IAAU;MACbN,KAAK,CAAC,qCAAD,CAAL;MACAO,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH,CAVE,CAAP;EAWH,CAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMI,OAAO,GAAG,MAAM;EACzB,OAAO,MAAOrB,QAAP,IAAoB;IACvBA,QAAQ,CAACL,aAAa,EAAd,CAAR;IACAO,YAAY,CAACoB,UAAb,CAAwBxB,cAAxB;IACAE,QAAQ,CAACJ,IAAI,CAAC,SAAD,CAAL,CAAR;EACH,CAJD;AAKH,CANM"},"metadata":{},"sourceType":"module"}