{"ast":null,"code":"import axios from 'axios';\nconst LOGIN_USER_KEY = 'LOGIN_USER_KEY';\nvar baseURL;\n\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  baseURL = 'http://127.0.0.1:8000';\n}\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\n\napi.interceptors.request.use(config => {\n  if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.signUp = async (user_name, email, password) => {\n      const savedPost = await api.post('/users/signup/', {\n        user_name: user_name,\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.signIn = async (email, password) => {\n      const savedPost = await api.post('users/signin/', {\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.getUsers = async () => {\n      const posts = await api.get('/users/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n\n    this.getItems = async () => {\n      let url = '/items/';\n      const items = await api.get(url).then(response => {\n        return response.data.results;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return items;\n    };\n\n    this.getCarts = async () => {\n      const carts = await api.get('/carts/', {\n        requiredtoken: true\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return carts;\n    };\n\n    this.addCarts = async item_id => {\n      const savedCart = await api.post('/carts/add/', {\n        item: item_id,\n        quantity: 1\n      }, {\n        requiredtoekn: true\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n\n    this.updateCarts = async (cart_id, quantity) => {\n      const savedCart = await api.put('/carts/update/' + cart_id + '/', {\n        quantity: quantity\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n\n    this.deleteCarts = async cart_id => {\n      const response = await api.delete('/carts/delete/' + cart_id + '/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n\n    this.orderAdd = async function () {\n      let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const order = await api.post('/orders/add/', params).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return order;\n    };\n\n    this.getPosts = async () => {\n      const posts = await api.get('/posts/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n\n    this.addPost = async (name, body, image) => {\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('body', body);\n      formData.append('image', image);\n      const savedPost = await api.post('/posts/add/', formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.deletePost = async id => {\n      const response = await api.delete('/posts/delete/' + id + '/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n  }\n\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","process","env","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL","api","create","headers","interceptors","request","use","config","requireToken","localStorage","getItem","common","JSON","parse","token","err","console","error","API","signUp","user_name","email","password","savedPost","post","then","response","data","catch","Error","signIn","getUsers","posts","get","getItems","url","items","results","getCarts","carts","requiredtoken","addCarts","item_id","savedCart","item","quantity","requiredtoekn","updateCarts","cart_id","put","deleteCarts","delete","orderAdd","params","order","getPosts","addPost","name","body","image","formData","FormData","append","deletePost","id"],"sources":["/Users/rybinmathalikunnel/Desktop/techis-wd-forum-django-react-main/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\nconst LOGIN_USER_KEY = 'LOGIN_USER_KEY';\n\nvar baseURL;\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n    baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n    baseURL = 'http://127.0.0.1:8000';\n}\n\nconst api = axios.create({\n    baseURL: baseURL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\napi.interceptors.request.use(\n    config => {\n        if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n            config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n        }\n\n        return config;\n    },\n    err => {\n        console.error(err);\n    }\n);\n\nexport default class API {\n   ////This is for the user actions and operations///\n   signUp = async (user_name, email, password) => {\n        const savedPost = await api\n        .post('/users/signup/', {\n            user_name: user_name,\n            email: email,\n            password: password\n        })\n        .then(response =>{\n            return response.data;\n        })\n        .catch(error => {\n            throw new Error(error)\n        })\n    return savedPost;\n   }\n   signIn = async (email, password) => {\n        const savedPost = await api\n            .post('users/signin/',{\n                email: email,\n                password: password\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error)\n            })\n        return savedPost;\n   }\n   getUsers = async () => {\n        const posts = await api\n            .get('/users/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            })\n        return posts\n   }\n\n////this is for items actions and operations///\n   getItems = async () => {\n        let url = '/items/';\n        const items = await api\n            .get(url)\n            .then( response => {\n                return response.data.results\n            })\n            .catch(error => {\n                throw new Error(error);\n            })\n        return items;\n    } \n\n////this is for cart actions and operations///\n    getCarts = async () => {\n        const carts = await api\n            .get('/carts/', {requiredtoken: true})\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            })\n        return carts;\n    }\n    addCarts = async item_id => {\n        const savedCart = await api\n            .post('/carts/add/', {\n                item: item_id,\n                quantity: 1\n            }, {requiredtoekn: true})\n            .then(response => {\n                return response.data\n            })\n            .catch(error => {\n                throw new Error(error);\n            })\n        return savedCart\n\n    }\n\n    updateCarts = async (cart_id, quantity) => {\n        const savedCart = await api \n            .put('/carts/update/' + cart_id + '/',{\n                quantity: quantity\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error)\n            })\n        return savedCart;\n    }\n\n    deleteCarts = async cart_id => {\n        const response = await api\n            .delete('/carts/delete/' + cart_id + '/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return response;\n    };\n    //// for orders///\n    orderAdd = async (params = {}) => {\n        const order = await api\n            .post('/orders/add/', params)\n            .then(response => {\n                return response.data\n            })\n            .catch(error => {\n                throw new Error(error)\n            })\n        return order;\n    }\n\n    ///////////////////////////////////////////\n    // Reference Post\n    //////////////////////////////////////////\n\n    getPosts = async () => {\n        const posts = await api\n            .get('/posts/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return posts;\n    };\n\n    addPost = async (name, body, image) => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('body', body);\n        formData.append('image', image);\n        const savedPost = await api\n            .post('/posts/add/', formData)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedPost;\n    };\n\n    deletePost = async id => {\n        const response = await api\n            .delete('/posts/delete/' + id + '/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return response;\n    };\n}\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,IAAIC,OAAJ;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IAAqCF,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,YAA/E,EAA6F;EACzFH,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYE,sBAAtB;AACH,CAFD,MAEO;EACHJ,OAAO,GAAG,uBAAV;AACH;;AAED,MAAMK,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAa;EACrBN,OAAO,EAAEA,OADY;EAErBO,OAAO,EAAE;IACL,gBAAgB;EADX;AAFY,CAAb,CAAZ;AAOA;AACA;AACA;;AACAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACIC,MAAM,IAAI;EACN,IAAIA,MAAM,CAACC,YAAP,IAAuBC,YAAY,CAACC,OAAb,CAAqBf,cAArB,CAA3B,EAAiE;IAC7DY,MAAM,CAACJ,OAAP,CAAeQ,MAAf,CAAsB,eAAtB,IAAyCC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqBf,cAArB,CAAX,EAAiDmB,KAA1F;EACH;;EAED,OAAOP,MAAP;AACH,CAPL,EAQIQ,GAAG,IAAI;EACHC,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,CAVL;AAaA,eAAe,MAAMG,GAAN,CAAU;EAAA;IAAA,KAEtBC,MAFsB,GAEb,OAAOC,SAAP,EAAkBC,KAAlB,EAAyBC,QAAzB,KAAsC;MAC1C,MAAMC,SAAS,GAAG,MAAMtB,GAAG,CAC1BuB,IADuB,CAClB,gBADkB,EACA;QACpBJ,SAAS,EAAEA,SADS;QAEpBC,KAAK,EAAEA,KAFa;QAGpBC,QAAQ,EAAEA;MAHU,CADA,EAMvBG,IANuB,CAMlBC,QAAQ,IAAG;QACb,OAAOA,QAAQ,CAACC,IAAhB;MACH,CARuB,EASvBC,KATuB,CASjBX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAXuB,CAAxB;MAYJ,OAAOM,SAAP;IACA,CAhBqB;;IAAA,KAiBtBO,MAjBsB,GAiBb,OAAOT,KAAP,EAAcC,QAAd,KAA2B;MAC/B,MAAMC,SAAS,GAAG,MAAMtB,GAAG,CACtBuB,IADmB,CACd,eADc,EACE;QAClBH,KAAK,EAAEA,KADW;QAElBC,QAAQ,EAAEA;MAFQ,CADF,EAKnBG,IALmB,CAKdC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CAPmB,EAQnBC,KARmB,CAQbX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAVmB,CAAxB;MAWA,OAAOM,SAAP;IACJ,CA9BqB;;IAAA,KA+BtBQ,QA/BsB,GA+BX,YAAY;MAClB,MAAMC,KAAK,GAAG,MAAM/B,GAAG,CAClBgC,GADe,CACX,SADW,EAEfR,IAFe,CAEVC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CAJe,EAKfC,KALe,CAKTX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAPe,CAApB;MAQA,OAAOe,KAAP;IACJ,CAzCqB;;IAAA,KA4CtBE,QA5CsB,GA4CX,YAAY;MAClB,IAAIC,GAAG,GAAG,SAAV;MACA,MAAMC,KAAK,GAAG,MAAMnC,GAAG,CAClBgC,GADe,CACXE,GADW,EAEfV,IAFe,CAETC,QAAQ,IAAI;QACf,OAAOA,QAAQ,CAACC,IAAT,CAAcU,OAArB;MACH,CAJe,EAKfT,KALe,CAKTX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAPe,CAApB;MAQA,OAAOmB,KAAP;IACH,CAvDoB;;IAAA,KA0DrBE,QA1DqB,GA0DV,YAAY;MACnB,MAAMC,KAAK,GAAG,MAAMtC,GAAG,CAClBgC,GADe,CACX,SADW,EACA;QAACO,aAAa,EAAE;MAAhB,CADA,EAEff,IAFe,CAEVC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CAJe,EAKfC,KALe,CAKTX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAPe,CAApB;MAQA,OAAOsB,KAAP;IACH,CApEoB;;IAAA,KAqErBE,QArEqB,GAqEV,MAAMC,OAAN,IAAiB;MACxB,MAAMC,SAAS,GAAG,MAAM1C,GAAG,CACtBuB,IADmB,CACd,aADc,EACC;QACjBoB,IAAI,EAAEF,OADW;QAEjBG,QAAQ,EAAE;MAFO,CADD,EAIjB;QAACC,aAAa,EAAE;MAAhB,CAJiB,EAKnBrB,IALmB,CAKdC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CAPmB,EAQnBC,KARmB,CAQbX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAVmB,CAAxB;MAWA,OAAO0B,SAAP;IAEH,CAnFoB;;IAAA,KAqFrBI,WArFqB,GAqFP,OAAOC,OAAP,EAAgBH,QAAhB,KAA6B;MACvC,MAAMF,SAAS,GAAG,MAAM1C,GAAG,CACtBgD,GADmB,CACf,mBAAmBD,OAAnB,GAA6B,GADd,EACkB;QAClCH,QAAQ,EAAEA;MADwB,CADlB,EAInBpB,IAJmB,CAIdC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CANmB,EAOnBC,KAPmB,CAObX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CATmB,CAAxB;MAUA,OAAO0B,SAAP;IACH,CAjGoB;;IAAA,KAmGrBO,WAnGqB,GAmGP,MAAMF,OAAN,IAAiB;MAC3B,MAAMtB,QAAQ,GAAG,MAAMzB,GAAG,CACrBkD,MADkB,CACX,mBAAmBH,OAAnB,GAA6B,GADlB,EAElBvB,IAFkB,CAEbC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CAJkB,EAKlBC,KALkB,CAKZX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAPkB,CAAvB;MAQA,OAAOS,QAAP;IACH,CA7GoB;;IAAA,KA+GrB0B,QA/GqB,GA+GV,kBAAuB;MAAA,IAAhBC,MAAgB,uEAAP,EAAO;MAC9B,MAAMC,KAAK,GAAG,MAAMrD,GAAG,CAClBuB,IADe,CACV,cADU,EACM6B,MADN,EAEf5B,IAFe,CAEVC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CAJe,EAKfC,KALe,CAKTX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAPe,CAApB;MAQA,OAAOqC,KAAP;IACH,CAzHoB;;IAAA,KA+HrBC,QA/HqB,GA+HV,YAAY;MACnB,MAAMvB,KAAK,GAAG,MAAM/B,GAAG,CAClBgC,GADe,CACX,SADW,EAEfR,IAFe,CAEVC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CAJe,EAKfC,KALe,CAKTX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAPe,CAApB;MAQA,OAAOe,KAAP;IACH,CAzIoB;;IAAA,KA2IrBwB,OA3IqB,GA2IX,OAAOC,IAAP,EAAaC,IAAb,EAAmBC,KAAnB,KAA6B;MACnC,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;MACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;MACAG,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;MACAE,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB;MACA,MAAMpC,SAAS,GAAG,MAAMtB,GAAG,CACtBuB,IADmB,CACd,aADc,EACCoC,QADD,EAEnBnC,IAFmB,CAEdC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CAJmB,EAKnBC,KALmB,CAKbX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAPmB,CAAxB;MAQA,OAAOM,SAAP;IACH,CAzJoB;;IAAA,KA2JrBwC,UA3JqB,GA2JR,MAAMC,EAAN,IAAY;MACrB,MAAMtC,QAAQ,GAAG,MAAMzB,GAAG,CACrBkD,MADkB,CACX,mBAAmBa,EAAnB,GAAwB,GADb,EAElBvC,IAFkB,CAEbC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAhB;MACH,CAJkB,EAKlBC,KALkB,CAKZX,KAAK,IAAI;QACZ,MAAM,IAAIY,KAAJ,CAAUZ,KAAV,CAAN;MACH,CAPkB,CAAvB;MAQA,OAAOS,QAAP;IACH,CArKoB;EAAA;;AAAA"},"metadata":{},"sourceType":"module"}